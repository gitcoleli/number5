version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  kubernetes: circleci/kubernetes@0.11.2
  aws-eks: circleci/aws-eks@0.2.3


    
jobs:

# ##########################Building Section #################################################################################################

  build-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install -r requirements.txt
                        pip list
                        ls

#######################################linting the Application##################################################################################

  lint-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install -r requirements.txt
                        pip list
      - run:
                name: lint app
                command: |
                        pylint --disable=R,C,W1203 app.py                                                

###############################################vulnerability Scanning the alplication ###############################################################

  scan-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install --upgrade pip
                        pip install -r requirements.txt
                        safety check

################################################ EKS ########################################################


create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: udc-k8s
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: udc-k8s
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: k8s/deployment.yaml
          resource-name: deployment



workflows:
  default:
    jobs:
      # - build-app
      # - lint-app:
      #     requires: [build-app]
      # - scan-app:
      #     requires: [lint-app]
      # - eksfun:
      #     requires: [aws-ecr/build-and-push-image]
        - create-deployment
      # - aws-ecr/build-and-push-image:
      #     setup-remote-docker: false
      #     repo: number5
      #     tag: "${CIRCLE_BUILD_NUM}"
      #     dockerfile: Dockerfile
      #     path: .
      #     requires: [scan-app]

################################