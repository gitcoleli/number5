version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.15.3
  kubernetes: circleci/kubernetes@0.11.2
  aws-eks: circleci/aws-eks@0.2.3


    
jobs:

# ##########################Building Section #################################################################################################

  build-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install -r requirements.txt
                        pip list
                        ls

#######################################linting the Application##################################################################################

  lint-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install -r requirements.txt
                        pip list
      - run:
                name: lint app
                command: |
                        pylint --disable=R,C,W1203 app.py                                                

###############################################vulnerability Scanning the alplication ###############################################################

  scan-app:
    build:
    docker:
      - image: python:3.9-alpine
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
                    at: ~/
      - run:
                name: Install dependencies
                command: |
                        pip install --upgrade pip
                        pip install -r requirements.txt
                        safety check

################################################ EKS ########################################################
  eksbuild:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run:
          name: Install updates
          command: |
            apt-get -y -qq update
            apt-get -y install sudo

      - run:
          name: Install sudo
          command: |
            apt-get -y -qq update
            apt-get -y install sudo

      - run:
          name: Install apps needed for build
          command: |
            sudo apt-get -y install curl gnupg2 software-properties-common unzip less git dos2unix

      - run:
          name: Install eks
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version

      - run:
          name: build and verify eks cluster
          command: |
            touch clustername.txt
            eksctl get cluster -o yaml  >> clustername.txt
            cluster=$(grep -i udc-k8s clustername.txt | wc -l)
            if [[ $cluster -gt 0 ]]
                then 
                echo "cluster exists"
                else
                echo "Cant find kube cluster, creating..."
                eksctl create cluster --name udc-k8s --region=us-west-2 --ssh-public-key=udacity --nodes=4 --node-type=m5.large
            fi

  eksfun:
    docker:
      - image: ubuntu:18.04
    steps:
      - checkout
      - run:
          name: Install updates
          command: |
            apt-get -y -qq update
            apt-get -y install sudo

      - run:
          name: Install sudo
          command: |
            apt-get -y -qq update
            apt-get -y install sudo

      - run:
          name: Install apps needed for build
          command: |
            sudo apt-get -y install curl gnupg2 software-properties-common unzip less git dos2unix

      - run:
          name: Install awscli
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version

      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - run:
          name: connect to EKS
          command: |
            aws eks --region us-west-2 update-kubeconfig --name udc-k8s

      - run:
          name: test kube commands
          command: |
            kubectl version
            kubectl get svc
            kubectl apply -f k8s/deployment.yml
            kubectl apply -f k8s/service.yml


workflows:
  default:
    jobs:
      - build-app
      - lint-app:
          requires: [build-app]
      - scan-app:
          requires: [lint-app]
      - eksbuild:
          requires: [aws-ecr/build-and-push-image]
      - eksfun:
          requires: [eksbuild]
      - aws-ecr/build-and-push-image:
          setup-remote-docker: false
          repo: number5
          tag: "latest"
          dockerfile: Dockerfile
          path: .
          requires: [scan-app]
      

################################